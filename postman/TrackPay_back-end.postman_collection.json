{
	"info": {
		"_postman_id": "9d87c543-4415-4988-aaff-b624cf9a63b1",
		"name": "TrackPay back-end",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Sign-up",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation signUp($name: String!, $email: String!, $password: String!) {\n  signUp(name: $name, email: $email, password: $password) {\n    __typename\n    ... on SignUpResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n      }\n    }\n    ... on SignUpResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"name\": \"{{userName}}\",\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate verification code",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation generateUserVerification($email: String!, $password: String!) {\n  verifyUser(email: $email, password: $password) {\n    __typename\n    ... on UserVerificationResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n      }\n    }\n    ... on UserVerificationResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify verification code",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation verifyUser(\n  $email: String!\n  $password: String!\n  $verificationCode: String\n) {\n  verifyUser(\n    email: $email\n    password: $password\n    verificationCode: $verificationCode\n  ) {\n    __typename\n    ... on UserVerificationResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n        userRoles {\n          created\n          isActive\n          role\n        }\n      }\n    }\n    ... on UserVerificationResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"verificationCode\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($email: String!, $password: String!, $fcmToken: String!) {\n  login(email: $email, password: $password, fcmToken: $fcmToken) {\n    __typename\n    ... on LoginResultSuccess {\n      token\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        userRoles {\n          C_UserRole_ID\n          C_UserRole_UU\n          created\n          updated\n          isActive\n          roleName\n        }\n      }\n    }\n    ... on LoginResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"fcmToken\": \"{{fcmToken}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Return me",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query me {\n  me {\n    __typename\n    ... on User {\n      C_User_ID\n      C_User_UU\n      created\n      updated\n      isActive\n      name\n      email\n      userRoles {\n        C_UserRole_ID\n        C_UserRole_UU\n        created\n        updated\n        isActive\n        roleName\n      }\n      userPaymentMethods {\n          name\n      }\n    }\n    ... on NotAuthenticatedError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUser($C_User_ID: ID!) {\n  updateUser(\n      C_User_ID: $C_User_ID,\n      input: {\n        phone: \"+551199991234\"\n        userDocumentType: \"CPF\"\n        userDocumentNo: \"78847950007\"\n    }\n  ) {\n      __typename\n    ... on User {\n      C_User_ID\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"C_User_ID\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User QR code",
			"item": [
				{
					"name": "Renew user current QR code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation renewUserCurrentQRCode($C_User_ID: ID!) {\n  renewUserCurrentQRCode(C_User_ID: $C_User_ID) {\n    __typename\n    ... on UserQRCode {\n      schemaVersion\n      dataType\n      data\n    }\n    ... on UserQRCodeResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"C_User_ID\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return user current QR code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query userCurrentQRCode($C_User_ID: ID!) {\n  userCurrentQRCode(C_User_ID: $C_User_ID) {\n    __typename\n    ... on UserQRCode {\n      schemaVersion\n      dataType\n      data\n    }\n    ... on UserQRCodeResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"C_User_ID\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User payment method",
			"item": [
				{
					"name": "Create user payment method",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  createUserPaymentMethod(\n    input: {\n      name: \"My Visa card\"\n      paymentMethod: \"DRC\"\n      cardNumber: \"1000000000000010\"\n      cardCVV: \"1234\"\n      cardBrand: \"visa\"\n      cardHolderName: \"Test User\"\n      cardExpMonth: 12\n      cardExpYear: 2030\n      cardHolderDocumentType: \"CPF\"\n      cardHolderDocumentNo: \"78847950007\"\n      billingLocation: {\n        line1: \"Av. Paulista\"\n        line2: \"100\"\n        city: \"SÃ£o Paulo\"\n        state: \"SP\"\n        country: \"Brazil\"\n        zipCode: \"01310000\"\n      }\n    }\n  ) {\n    ... on UserPaymentMethod {\n      C_UserPaymentMethod_ID\n      name\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return user payment method",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query userPaymentMethod($C_UserPaymentMethod_ID: ID!) {\n  userPaymentMethod(C_UserPaymentMethod_ID: $C_UserPaymentMethod_ID) {\n    __typename\n    ... on UserPaymentMethod {\n      name\n      user {\n        name\n      }\n      billingLocation {\n        city\n      }\n    }\n    ... on UserPaymentMethodResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"C_UserPaymentMethod_ID\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return user payment methods",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query userPaymentMethods($C_User_ID: ID!) {\n  userPaymentMethods(C_User_ID: $C_User_ID) {\n    __typename\n    ... on UserPaymentMethods {\n      userPaymentMethods {\n          name\n          user {\n              name\n          }\n          billingLocation {\n              city\n          }\n      }\n    }\n    ... on UserPaymentMethodResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"C_User_ID\": \"1\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}