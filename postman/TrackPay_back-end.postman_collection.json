{
	"info": {
		"_postman_id": "aa0b0473-7060-42f5-97c3-c48c6445fa69",
		"name": "TrackPay back-end",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Sign-up",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation signUp($name: String!, $email: String!, $password: String!) {\n  signUp(name: $name, email: $email, password: $password) {\n    __typename\n    ... on SignUpResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n      }\n    }\n    ... on SignUpResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"name\": \"{{userName}}\",\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate verification code",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation generateUserVerification($email: String!, $password: String!) {\n  verifyUser(email: $email, password: $password) {\n    __typename\n    ... on UserVerificationResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n      }\n    }\n    ... on UserVerificationResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify verification code",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation verifyUser(\n  $email: String!\n  $password: String!\n  $verificationCode: String\n) {\n  verifyUser(\n    email: $email\n    password: $password\n    verificationCode: $verificationCode\n  ) {\n    __typename\n    ... on UserVerificationResultSuccess {\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        isUserVerified\n        userRoles {\n          created\n          isActive\n          role\n        }\n      }\n    }\n    ... on UserVerificationResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"verificationCode\": \"\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation login($email: String!, $password: String!, $fcmToken: String!) {\n  login(email: $email, password: $password, fcmToken: $fcmToken) {\n    __typename\n    ... on LoginResultSuccess {\n      token\n      user {\n        C_User_ID\n        C_User_UU\n        created\n        updated\n        isActive\n        name\n        email\n        userRoles {\n          C_UserRole_ID\n          C_UserRole_UU\n          created\n          updated\n          isActive\n          roleName\n        }\n      }\n    }\n    ... on LoginResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
								"variables": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\",\n    \"fcmToken\": \"{{fcmToken}}\"\n}"
							}
						},
						"url": {
							"raw": "{{baseUrl}}/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Return me",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query me {\n  me {\n    __typename\n    ... on User {\n      C_User_ID\n      C_User_UU\n      created\n      updated\n      isActive\n      name\n      email\n      userRoles {\n        C_UserRole_ID\n        C_UserRole_UU\n        created\n        updated\n        isActive\n        roleName\n      }\n      userWallets {\n          name\n      }\n    }\n    ... on NotAuthenticatedError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update me",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  me(\n      input: {\n        phone: \"1199991234\"\n        userDocumentType: \"CPF\"\n        userDocumentNo: \"78847950007\"\n    }\n  ) {\n      __typename\n    ... on User {\n      C_User_ID\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Renew my current QR Code",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation renewMyCurrentQRCode {\n  renewMyCurrentQRCode {\n    __typename\n    ... on UserQRCode {\n      schemaVersion\n      dataType\n      data\n    }\n    ... on UserQRCodeResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return my current QR Code",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query myCurrentQRCode {\n  myCurrentQRCode {\n    __typename\n    ... on UserQRCode {\n      schemaVersion\n      dataType\n      data\n    }\n    ... on UserQRCodeResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User Wallet",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createUserWallet(\n    input: {\n      name: \"My Visa card\"\n      paymentMethod: \"DRC\"\n      cardNumber: \"1000000000000010\"\n      cardCVV: \"1234\"\n      cardBrand: \"visa\"\n      cardHolderName: \"Test User\"\n      cardExpMonth: 12\n      cardExpYear: 2030\n      cardHolderDocumentType: \"CPF\"\n      cardHolderDocumentNo: \"78847950007\"\n      billingLocation: {\n        line1: \"Av. Paulista\"\n        line2: \"100\"\n        city: \"SÃ£o Paulo\"\n        state: \"SP\"\n        country: \"Brazil\"\n        zipCode: \"01310000\"\n      }\n    }\n  ) {\n    ... on UserWallet {\n      C_UserWallet_ID\n      name\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return User Wallet",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query userWallet($C_UserWallet_ID: ID!) {\n  userWallet(C_UserWallet_ID: $C_UserWallet_ID) {\n    __typename\n    ... on UserWallet {\n      name\n      user {\n        name\n      }\n      billingLocation {\n        city\n      }\n    }\n    ... on UserWalletResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": "{\n    \"C_UserWallet_ID\": \"1\"\n}"
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return User Wallets",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query userWallets($C_User_ID: ID!) {\n  userWallets(C_User_ID: $C_User_ID) {\n    __typename\n    ... on UserWallets {\n      userWallets {\n          name\n          user {\n              name\n          }\n          billingLocation {\n              city\n          }\n      }\n    }\n    ... on UserWalletResultError {\n      message\n    }\n    ... on Error {\n      __typename\n      message\n    }\n  }\n}\n",
						"variables": "{\n    \"C_User_ID\": \"1\"\n}"
					}
				},
				"url": {
					"raw": "{{baseUrl}}/graphql",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}