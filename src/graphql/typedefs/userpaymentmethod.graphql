type UserPaymentMethod {
  C_UserPaymentMethod_ID: ID!
  C_UserPaymentMethod_UU: String!
  created: Date!
  updated: Date!
  isActive: Boolean!
  user: User! 
  name: String!
  paymentMethod: String!
  cardFirstDigits: String!
  cardLastDigits: String!
  cardBrand: String!
  cardHolderName: String!
  cardExpMonth: Int!
  cardExpYear: Int!
  cardHolderDocumentType: String!
  cardHolderDocumentNo: String!
  billingLocation: Location!
  PGM_CardId: String!
}

input CreateUserPaymentMethodInput {
  name: String!
  paymentMethod: String!
  cardBrand: String!
  cardNumber: String!
  cardCVV: String!
  cardExpMonth: Int!
  cardExpYear: Int!
  cardHolderName: String!
  cardHolderDocumentType: String!
  cardHolderDocumentNo: String!
  billingLocation: CreateLocationInput!
}

type UserPaymentMethods { 
  userPaymentMethods: [UserPaymentMethod]!
}

type UserPaymentMethodNotFoundError implements Error {
  message: String!
}

type InvalidCardError implements Error {
  message: String!
}

type UserPaymentMethodResultError implements Error {
  message: String!
}

union UserPaymentMethodResult = UserPaymentMethod | 
  UserPaymentMethods |
  UserPaymentMethodNotFoundError | 
  InvalidCardError |
  UserPaymentMethodResultError | 
  NotAuthenticatedError |
  NotAuthorizedError
